{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/Container/Container.module.css","Components/Section/Section.module.css","Components/Container/Container.js","Components/Section/Section.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","protoType","PropTypes","string","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","onSubmit","resetForm","form","this","label","input","type","pattern","required","onChange","input_number","button","React","Component","func","Filter","filter","onChangeFilter","ContactList","contacts","deleteContact","list","map","item","onClick","App","addContact","data","prevState","some","includes","alert","currentId","indx","i","length","splice","changeFilter","toLocaleLowerCase","turnOnFilter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d7162e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__15E_f\",\"label\":\"ContactForm_label__1FXjq\",\"input\":\"ContactForm_input__212Dk\",\"input-number\":\"ContactForm_input-number__Shg3N\",\"input_number\":\"ContactForm_input_number__2rUPe\",\"button\":\"ContactForm_button__8HP6y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1SQ_V\",\"item\":\"ContactList_item__Ij3F1\",\"button\":\"ContactList_button__1zm7j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__yAtu1\",\"input\":\"Filter_input__ykOq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3fP5b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__j6hgf\"};","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.protoType = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n    this.props.onSubmit(contact);\r\n\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label}>\r\n          Enter name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"The name can only contain letters, apostrophe, dash and spaces. For example: Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Enter number\r\n          <input\r\n            className={s.input_number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"The phone number can consist of numerals, spaces, dashes, brackets and start with +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Save\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.protoType = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onChangeFilter }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Enter the contact's name. Search is not sensitive to input characters.\"\r\n        required\r\n        onChange={onChangeFilter}\r\n        value={filter}\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.protoType = {\r\n  filter: PropTypes.string,\r\n  onChangeFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(contact => {\r\n        return (\r\n          <li className={s.item} key={contact.id}>\r\n            <span>\r\n              {contact.name}: {contact.number}\r\n            </span>\r\n            <button\r\n              className={s.button}\r\n              type=\"button\"\r\n              id={contact.id}\r\n              onClick={() => deleteContact(contact.id)}\r\n            >\r\n              remove\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  deleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\nimport Container from './Components/Container';\nimport Section from './Components/Section';\nimport ContactForm from './Components/ContactForm';\nimport Filter from './Components/Filter';\nimport ContactList from './Components/ContactList';\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = data => {\n    this.setState(prevState => {\n      if (\n        prevState.contacts.some(contact => contact.name.includes(data.name))\n      ) {\n        return alert(`${data.name} is already in contacts!`);\n      }\n\n      return { contacts: [...prevState.contacts, data] };\n    });\n  };\n\n  deleteContact = currentId => {\n    this.setState(prevState => {\n      let indx = null;\n\n      for (let i = 0; i < prevState.contacts.length; i += 1) {\n        if (prevState.contacts[i].id === currentId) {\n          indx = i;\n        }\n      }\n\n      prevState.contacts.splice(indx, 1);\n\n      return { contacts: [...prevState.contacts] };\n    });\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value.toLocaleLowerCase() });\n  };\n\n  turnOnFilter = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter),\n    );\n  };\n\n  render() {\n    return (\n      <Container title=\"Phonebook\">\n        <Section title=\"You can add new contacts below:\">\n          <ContactForm onSubmit={this.addContact}></ContactForm>\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter\n            filter={this.state.filter}\n            onChangeFilter={this.changeFilter}\n          />\n          {this.state.filter === '' ? (\n            <ContactList\n              contacts={this.state.contacts}\n              deleteContact={this.deleteContact}\n            />\n          ) : (\n            <ContactList\n              contacts={this.turnOnFilter()}\n              deleteContact={this.deleteContact}\n            />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}